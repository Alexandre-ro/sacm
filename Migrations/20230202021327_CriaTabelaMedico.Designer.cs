// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SACM.Data;

#nullable disable

namespace SACM.Migrations
{
    [DbContext(typeof(SacmContext))]
    [Migration("20230202021327_CriaTabelaMedico")]
    partial class CriaTabelaMedico
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SACM.Entities.Especialidade", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.HasKey("Codigo");

                    b.ToTable("especialidade", (string)null);
                });

            modelBuilder.Entity("SACM.Entities.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AnoFormatura")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("ano_formatura");

                    b.Property<int>("AnoNascimento")
                        .HasMaxLength(4)
                        .HasColumnType("int")
                        .HasColumnName("ano_nascimento");

                    b.Property<int>("CodigoEspecialidade")
                        .HasColumnType("int")
                        .HasColumnName("codigo_especialidade");

                    b.Property<string>("Crm")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("crm");

                    b.Property<int>("DiaNascimento")
                        .HasMaxLength(2)
                        .HasColumnType("int")
                        .HasColumnName("dia_nascimento");

                    b.Property<string>("InstituicaoFormatura")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("instituicao_formatura");

                    b.Property<int>("MesNascimento")
                        .HasMaxLength(2)
                        .HasColumnType("int")
                        .HasColumnName("mes_nascimento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("CodigoEspecialidade");

                    b.ToTable("medico", (string)null);
                });

            modelBuilder.Entity("SACM.Entities.Medico", b =>
                {
                    b.HasOne("SACM.Entities.Especialidade", "Especialidade")
                        .WithMany("Medicos")
                        .HasForeignKey("CodigoEspecialidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialidade");
                });

            modelBuilder.Entity("SACM.Entities.Especialidade", b =>
                {
                    b.Navigation("Medicos");
                });
#pragma warning restore 612, 618
        }
    }
}
